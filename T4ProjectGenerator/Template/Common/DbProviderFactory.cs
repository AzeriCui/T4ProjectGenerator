// ------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本: 12.0.0.0
//  
//     对此文件的更改可能会导致不正确的行为。此外，如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
// ------------------------------------------------------------------------------
namespace T4ProjectGenerator
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "E:\zy\T4\T4ProjectGenerator\T4ProjectGenerator\Template\Common\DbProviderFactory.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "12.0.0.0")]
    public partial class DbProviderFactory : Base
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("using System;\r\n\r\nnamespace ");
            
            #line 8 "E:\zy\T4\T4ProjectGenerator\T4ProjectGenerator\Template\Common\DbProviderFactory.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Config.CommonNamespace));
            
            #line default
            #line hidden
            this.Write(@"
{
    public abstract class DbProviderFactory
    {
        protected bool IsBeginTrans = false;
        protected abstract IDbContextComponent Context { get; set; }

        public void BeginTrans()
        {
            if (IsBeginTrans == false)
            {
                Context.Transaction = Context.Connection.BeginTransaction();
                IsBeginTrans = true;
            }
        }

        public void Commit()
        {
            if (IsBeginTrans == false)
            {
                throw new ArgumentNullException(""transaction"", ""未开启事务不能进行操作"");
            }
            Context.Transaction.Commit();
            IsBeginTrans = false;
        }

        public void Rollback()
        {
            if (IsBeginTrans == false)
            {
                throw new ArgumentNullException(""transaction"", ""未开启事务不能进行操作"");
            }
            Context.Transaction.Rollback();
            IsBeginTrans = false;
        }

    }
}
");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
