<#@ template language="C#" inherits="Base" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
using System;

namespace <#=        Config.CommonNamespace #>
{
    public abstract class DbProviderFactory
    {
        protected bool IsBeginTrans = false;
        protected abstract IDbContextComponent Context { get; set; }

        public void BeginTrans()
        {
            if (IsBeginTrans == false)
            {
                Context.Transaction = Context.Connection.BeginTransaction();
                IsBeginTrans = true;
            }
        }

        public void Commit()
        {
            if (IsBeginTrans == false)
            {
                throw new ArgumentNullException("transaction", "未开启事务不能进行操作");
            }
            Context.Transaction.Commit();
            IsBeginTrans = false;
        }

        public void Rollback()
        {
            if (IsBeginTrans == false)
            {
                throw new ArgumentNullException("transaction", "未开启事务不能进行操作");
            }
            Context.Transaction.Rollback();
            IsBeginTrans = false;
        }

    }
}
