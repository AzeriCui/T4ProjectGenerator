// <auto-generated>
// 自动生成请勿修改
// </auto-generated>
using System;
using AutoTask.Common;

namespace AutoTask.Model
{
    /// <summary>
    /// 自动任务
    /// </summary>
    public partial class AutoTaskModel
    {
        /// <summary>
        /// 任务编号
        /// </summary>
        public virtual long Id { get; set; }
        /// <summary>
        /// 状态
        /// </summary>
        public virtual int Status { get; set; }
        /// <summary>
        /// 任务名字
        /// </summary>
        public virtual string Name { get; set; }
        /// <summary>
        /// 任务方法
        /// </summary>
        public virtual string TaskMethod { get; set; }
        /// <summary>
        /// 任务参数
        /// </summary>
        public virtual string TaskParams { get; set; }
        /// <summary>
        /// 预计执行时间
        /// </summary>
        public virtual System.DateTime PlanDate { get; set; }
        /// <summary>
        /// 实际执行时间
        /// </summary>
        public virtual System.DateTime ExecDate { get; set; }
        /// <summary>
        /// 结果状态
        /// </summary>
        public virtual bool ExecStatus { get; set; }
        /// <summary>
        /// 执行结果报文
        /// </summary>
        public virtual string ExecMessage { get; set; }
    }

    public class AutoTaskConfig : ISqlConfig
    {
        #region SQL语句
        private Lazy<string> _TableName = new Lazy<string>(() =>
        {
            return "AutoTask";
        });

        private Lazy<string> _Insert = new Lazy<string>(() =>
        {
            return "insert into AutoTask ([Status], [Name], [TaskMethod], [TaskParams], [PlanDate], [ExecDate], [ExecStatus], [ExecMessage]) values (@Status , @Name , @TaskMethod , @TaskParams , @PlanDate , @ExecDate , @ExecStatus , @ExecMessage ) ";
        });

        private Lazy<string> _InsertIdentity = new Lazy<string>(() =>
        {
            return "insert into AutoTask ([Status], [Name], [TaskMethod], [TaskParams], [PlanDate], [ExecDate], [ExecStatus], [ExecMessage]) values (@Status , @Name , @TaskMethod , @TaskParams , @PlanDate , @ExecDate , @ExecStatus , @ExecMessage ); select scope_identity() ";
        });

        private Lazy<string> _Update = new Lazy<string>(() =>
        {
            return "update AutoTask set [Status] = @Status, [Name] = @Name, [TaskMethod] = @TaskMethod, [TaskParams] = @TaskParams, [PlanDate] = @PlanDate, [ExecDate] = @ExecDate, [ExecStatus] = @ExecStatus, [ExecMessage] = @ExecMessage where [Id] = @Id ";
        });

        private Lazy<string> _Delete = new Lazy<string>(() =>
        {
            return "delete from AutoTask where {0} ";
        });

        private Lazy<string> _SelectAllCount = new Lazy<string>(() =>
        {
            return "select count(*) from AutoTask ";
        });

        private Lazy<string> _SelectCount = new Lazy<string>(() =>
        {
            return "select count(*) from AutoTask where {0} ";
        });

        private Lazy<string> _SelectTop = new Lazy<string>(() =>
        {
            return "select top({0}) * from AutoTask where {1} ";
        });

        private Lazy<string> _SelectTopOrder = new Lazy<string>(() =>
        {
            return "select top({0}) * from AutoTask where {1} order by {2} ";
        });

        private Lazy<string> _SelectAll = new Lazy<string>(() =>
        {
            return "select * from AutoTask ";
        });

        private Lazy<string> _SelectWhere = new Lazy<string>(() =>
        {
            return "select * from AutoTask where {0} ";
        });

        private Lazy<string> _SelectWhereOrder = new Lazy<string>(() =>
        {
            return "select * from AutoTask where {0} order by {1} ";
        });

        private Lazy<string> _SelectPage = new Lazy<string>(() =>
        {
            return "select * from (select row_number() over (order by {1}) as RowIndex, * from AutoTask where {0}) as t where t.RowIndex between {2} and {3} ";
        });
        #endregion

        public string TableName
        {
            get { return _TableName.Value; }
        }

        public string Insert
        {
            get { return _Insert.Value; }
        }

        public string InsertIdentity
        {
            get { return _InsertIdentity.Value; }
        }

        public string Update
        {
            get { return _Update.Value; }
        }

        public string Delete
        {
            get { return _Delete.Value; }
        }

        public string SelectAllCount
        {
            get { return _SelectAllCount.Value; }
        }

        public string SelectCount
        {
            get { return _SelectCount.Value; }
        }

        public string SelectTop
        {
            get { return _SelectTop.Value; }
        }

        public string SelectTopOrder
        {
            get { return _SelectTopOrder.Value; }
        }

        public string SelectAll
        {
            get { return _SelectAll.Value; }
        }

        public string SelectWhere
        {
            get { return _SelectWhere.Value; }
        }

        public string SelectWhereOrder
        {
            get { return _SelectWhereOrder.Value; }
        }

        public string SelectPage
        {
            get { return _SelectPage.Value; }
        }
    }
}